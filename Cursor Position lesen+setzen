Option Explicit
Public Declare Function GetCursorPos Lib "user32" (lpPoint As POINTAPI) As Long
Public Declare Function SetCursorPos Lib "user32" (ByVal X As Long, ByVal Y As Long) As Long

Public Declare Sub mouse_event Lib "user32" (ByVal dwFlags As Long, ByVal dx As Long, _
  ByVal dy As Long, ByVal cButtons As Long, ByVal dwExtraInfo As Long)
Public Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" ( _
    ByVal lpClassName As String, _
    ByVal lpWindowName As String) As Long
Public Declare Function SetTimer Lib "user32.dll" ( _
    ByVal hWnd As Long, _
    ByVal nIDEvent As Long, _
    ByVal uElapse As Long, _
    ByVal lpTimerFunc As Long) As Long
Public Declare Function KillTimer Lib "user32.dll" ( _
    ByVal hWnd As Long, _
    ByVal nIDEvent As Long) As Long
Public Declare Function GetAsyncKeyState Lib "user32.dll" ( _
    ByVal vKey As Long) As Integer
Public Declare Function ScreenToClient Lib "user32" (ByVal hWnd As Long, _
    lpPoint As POINTAPI) As Long
    Private Type POINTAPI
    X As Long
    Y As Long
End Type

Public Const MOUSEEVENTF_LEFTDOWN = &H2
Public Const MOUSEEVENTF_LEFTUP = &H4
Public Const MOUSEEVENTF_RIGHTDOWN As Long = &H8
Public Const MOUSEEVENTF_RIGHTUP As Long = &H10

Public Const GC_CLASSNAMEMSWORD = "OpusApp"
Public Const VK_LBUTTON = &H1

Public udtPoint As POINTAPI
Public intClicks As Integer
Public intCoordinates(1 To 2, 1 To 2) As Integer

Sub CurosrXY_Pixels()
     
    Dim lngStatus As Long
    Dim typWhere As POINTAPI
     
    lngStatus = GetCursorPos(typWhere)
    MsgBox "x: " & typWhere.X & Chr(13) & "y: " & typWhere.Y, vbInformation, "Pixels"
     
End Sub

Sub GetShapeProperties()

    Dim sShapes As Shape, lLoop As Long, I As Long, cW As Long
    Dim wsStart As Worksheet, WsNew As Worksheet, Rng As Range
    Dim lngStatus As Long
    Dim typWhere As POINTAPI

    ''''''''''''''''''''''''''''''''''''''''''''''''
    ''''''''''LIST PROPERTIES OF SHAPES'''''''''''''
    ''''''''''Dave Hawley www.ozgrid.com''''''''''''
    ''''''''''''''''''''''''''''''''''''''''''''''''

    Set wsStart = ActiveSheet
    Set WsNew = Workbooks.Add.ActiveSheet
    'Add headings for our lists. Expand as needed

    WsNew.Range("A1:H1") = _
     Array("Shape Name", "Shape Type", "Height", "Width", "Left", "Top", _
     "Right", "Bottom")

    'Loop through all shapes on active sheet

    For Each sShapes In wsStart.Shapes

        'Increment Variable lLoop for row numbers

        lLoop = lLoop + 1

        With sShapes

            'Add shape properties

            WsNew.Cells(lLoop + 1, 1) = .Name
            WsNew.Cells(lLoop + 1, 2) = .OLEFormat.Object.Name
            WsNew.Cells(lLoop + 1, 3) = .Height
            WsNew.Cells(lLoop + 1, 4) = .Width
            WsNew.Cells(lLoop + 1, 5) = .Left
            WsNew.Cells(lLoop + 1, 6) = .Top
            WsNew.Cells(lLoop + 1, 7) = .Width + .Left
            WsNew.Cells(lLoop + 1, 8) = .Top + .Height
           'Follow the same pattern for more

        End With
  
    Next sShapes
    lLoop = lLoop + 2
    Set Rng = WsNew.Cells(lLoop, 1)
    cW = Application.Windows.Count
    Rng = "Anzahl der Fenster: " & cW
    Set Rng = Rng(2, 1)
    WsNew.Range(Rng(1, 1), Rng(1, 8)) = _
    Array("Window Zahl", "Window Top", "Left", "UsableHeight", "UsableWidth", "Top", _
    "", "")
    Set Rng = Rng(2, 1)
    For I = 1 To cW
      Rng = "Fenster # " & I
      Rng(1, 2) = Application.Windows(I).Top
      Rng(1, 3) = Application.Windows(I).Left
      Rng(1, 4) = Application.Windows(I).UsableHeight
      Rng(1, 5) = Application.Windows(I).UsableWidth
      Set Rng = Rng(2, 1)
    Next I
    'AutoFit Columns.
    lngStatus = GetCursorPos(typWhere)
    Rng(2, 1) = "Mausposition"
    Rng(2, 2) = typWhere.X
    Rng(2, 3) = typWhere.Y
    WsNew.Columns.AutoFit

End Sub
Sub SingleClick()
  SetCursorPos 100, 100 'x and y position
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub

Sub DoubleClick()
  'Double click as a quick series of two clicks
  SetCursorPos 100, 100 'x and y position
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub

Sub RightClick()
  'Right Click
  SetCursorPos 200, 200 'x and y position
  mouse_event MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0
End Sub

Sub Cursor_bewegen_nach()
  Dim X As Long, Y As Long, n As Long, I As Byte
  
  X = 100
  Y = 100
  n = SetCursorPos(X, Y)
  'Application.OnTime Now + TimeValue("00:00:03"), "Aufrufa"
End Sub

Sub prcStartTimer()
    Dim hWnd As Long
    intClicks = 0
    hWnd = FindWindow(GC_CLASSNAMEMSWORD, vbNullString)
    SetTimer hWnd, 0, 10, AddressOf prcTimer
End Sub

Sub prcStopTimer()
    Dim hWnd As Long
    hWnd = FindWindow(GC_CLASSNAMEMSWORD, vbNullString)
    KillTimer hWnd, 0
End Sub

Sub prcTimer(ByVal hWnd As Long, ByVal nIDEvent As Long, _
    ByVal uElapse As Long, ByVal lpTimerFunc As Long)
    On Error Resume Next
    If GetAsyncKeyState(VK_LBUTTON) = -32767 Then
        GetCursorPos udtPoint
        intClicks = intClicks + 1
        intCoordinates(intClicks, 1) = udtPoint.X
        intCoordinates(intClicks, 2) = udtPoint.Y
        If intClicks = 2 Then
            prcStopTimer
            MsgBox "Oben links x " & CStr(intCoordinates(1, 1)) & _
                " y " & CStr(intCoordinates(1, 2)) & _
                vbLf & " Unten rechts x " & CStr(intCoordinates(2, 1)) _
                & " y " & CStr(intCoordinates(2, 2))
        End If
    End If
End Sub



